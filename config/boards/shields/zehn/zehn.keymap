#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&caps_word { continue-list = <MINUS UNDERSCORE BKSP DEL LEFT RIGHT DOT COMMA SEMI SLASH>; };
&sk { release-after-ms = <3000>; quick-release; ignore-modifiers; };
&sl { release-after-ms = <3000>; };
&lt { tapping-term-ms = <300>; };

#define A1 0
#define NU 1
#define A2 2
#define SY 3
#define FU 4
#define SC 5
#define NV 6
#define OS 7
#define BT 8

/ {
    behaviors {
        mosk: moml_1shot_k  { compatible = "zmk,behavior-hold-tap";  #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&sk>; }; 
        mosl: moml_1shot_l  { compatible = "zmk,behavior-hold-tap";  #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&sl>; }; 
        motg: mom_toggle_l  { compatible = "zmk,behavior-hold-tap";  #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&tog>; }; 
        mokp: moml_kp       { compatible = "zmk,behavior-hold-tap";  #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&kp>; }; 

        bkspdel: back_del   { compatible = "zmk,behavior-mod-morph"; #binding-cells = <0>; bindings = <&kp BKSP>, <&kp DEL>;      mods = <(MOD_LSFT)>; }; 
    };
    macros {
        rls_mods: rls_mods { compatible = "zmk,behavior-macro"; #binding-cells = <0>; wait-ms = <5>; tap-ms = <15>;
            bindings = <&macro_release &kp LSHFT &kp LCTRL &kp LALT &kp LGUI>; };
    };
    combos {
        compatible = "zmk,combos";
        combo_keyrept { timeout-ms = <50>; layers = <0 1>; key-positions = <8 9>;   bindings = <&key_repeat>; };
        combo_sklshft { timeout-ms = <50>; layers = <0 1>; key-positions = <18 19>; bindings = <&sk LSHFT>; };
    };

    keymap {
        compatible = "zmk,keymap";
        abc1 {
            bindings = <
                &kp F  &kp S  &kp E  &kp R          &kp U  &kp I  &kp O  &kp L 
                &kp A  &kp W  &kp D  &kp T          &kp N  &kp M  &kp H  &kp C 
                          &mo NV  &mosl A2 A2    &lt OS SPACE  &sk LSHFT 
            >;
        };

        num {
            bindings = <
                &none  &kp N1  &kp N2  &kp N3        &kp N7  &kp N8  &kp N9  &none 
                &none  &kp N4  &kp N5  &kp N6        &sl A2  &sl SY  &none   &none 
                                 &mo NV  &kp N0    &to 0  &none 
            >;
         };

        abc2 {
            bindings = <
                &kp Z    &kp V    &kp Y      &kp X         &kp B    &kp K     &kp J      &kp Q 
                &kp SQT  &kp DQT  &kp MINUS  &kp G         &kp P    &kp SEMI  &kp COLON  &kp QMARK 
                              &mokp NV SLASH  &tog A2    &kp COMMA  &kp DOT 
            >;
        };

        sym {
            bindings = <
                &kp LT  &kp LPAR  &kp LBKT  &kp LBRC       &kp EXCL  &kp AT    &kp HASH  &kp BSLH 
                &kp GT  &kp RPAR  &kp RBKT  &kp RBRC       &kp STAR  &kp AMPS  &kp PIPE  &kp TILDE 
                                 &kp UNDER  &kp EQUAL      &kp PLUS  &kp GRAVE 
            >;
         };

        fun {
            bindings = <
                &none  &kp F9   &kp F8   &kp F7       &kp F1  &kp F2  &kp F3  &none 
                &none  &kp F12  &kp F11  &kp F10      &kp F4  &kp F5  &kp F6  &none 
                                  &mo NV  &tog FU    &to 0   &to 0 
            >;
        };

        shc {
            bindings = <
                &none        &kp LC(C)  &kp LG(C)  &kp LG(V)       &none  &none  &none  &none 
                &kp LA(TAB)  &kp LC(V)  &none      &none           &none  &none  &none  &none 
                                           &mo NV  &tog SC        &to 0  &none 
            >;
        };

        nav {
            bindings = <
                &sk LSHFT  &sk LCTRL  &sk LGUI  &sk LALT         &kp HOME   &kp UP    &kp END    &kp PG_UP 
                &kp TAB    &tog SC    &none     &sl OS           &kp LEFT   &kp DOWN  &kp RIGHT  &kp PG_DN 
                                        &kp SPACE  &to 0     &bkspdel  &kp ENTER 
            >;
        };

        osm {
            bindings = <
                &kt LSHFT   &kt LCTRL  &kt LGUI   &kt LALT       &sl NU   &mosl SY SY  &to NU     &to BT 
                &caps_word  &rls_mods  &kp CAPS   &to NV         &kp INS  &kp SPACE    &kp PSCRN  &to FU 
                                        &kp ESC   &kp TAB      &to 0  &none 
            >;
        };

        btp {
            bindings = <
                &none  &kp C_VOL_DN  &kp C_MUTE  &kp C_VOL_UP         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3 
                &none  &kp C_BRI_DN  &none       &kp C_BRI_UP         &none         &bt BT_CLR    &none         &none 
                                                 &none  &to 0         &to 0  &none 
            >;
        };

    };
};
