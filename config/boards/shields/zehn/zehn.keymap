#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&caps_word { continue-list = <MINUS UNDERSCORE BKSP DEL LEFT RIGHT DOT COMMA SEMI SLASH>; };
&sk { release-after-ms = <3000>; quick-release; ignore-modifiers; };
&sl { release-after-ms = <3000>; };
&lt { tapping-term-ms = <300>; };

#define A1 0
#define NU 1
#define A2 2
#define SY 3
#define FU 4
#define NV 5
#define OS 6

#define TOSL(l) &tosl l l
#define BT(d) &bt BT_SEL d

/ {
    behaviors {
        mosk: moml_1shot_k  { compatible = "zmk,behavior-hold-tap"; label = "MOML_1SHOT_K"; #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&sk>; }; 
        
        mosl: moml_1shot_l  { compatible = "zmk,behavior-hold-tap"; label = "MOML_1SHOT_L"; #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&sl>; }; 
        moto: mom_to_l      { compatible = "zmk,behavior-hold-tap"; label = "MOM_TO_L";     #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&to>; }; 
        
        tkp:  two_kp        { compatible = "zmk,behavior-hold-tap"; label = "TWO_KP";       #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <250>; bindings = <&kp>, <&kp>; }; 
        torp: togl_repeat   { compatible = "zmk,behavior-hold-tap"; label = "TOGL_REPEAT";  #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <250>; bindings = <&tog>, <&key_repeat>; }; 
        tosl: togl_1shot_l  { compatible = "zmk,behavior-hold-tap"; label = "TOGL_1SHOT_L"; #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <250>; bindings = <&tog>, <&sl>; }; 

        bkspdel: back_del   { compatible = "zmk,behavior-mod-morph"; label = "BACK_DEL"; #binding-cells = <0>; bindings = <&kp BKSP>, <&kp DEL>; mods = <(MOD_LSFT)>; }; 
    };
    macros {
        rls_mods: rls_mods { compatible = "zmk,behavior-macro"; label = "ZM_rls_mods"; #binding-cells = <0>; wait-ms = <5>; tap-ms = <15>;
            bindings = <&macro_release &kp LSHFT &kp LCTRL &kp LALT &kp LGUI>; };
    };

    keymap {
        compatible = "zmk,keymap";
        abc1 {
            bindings = <
                &kp F  &kp S  &kp E  &kp R       &kp U  &kp I  &kp O  &kp L 
                &kp A  &kp W  &kp D  &kp T       &kp N  &kp M  &kp H  &kp C 
                      &torp OS X  &mosl NV A2    &lt OS SPACE  &sk LSHFT 
            >;
        };

        num {
            bindings = <
                &none      &kp N1  &kp N2  &kp N3        &kp N7  &kp N8  &kp N9  &none 
                &kp EQUAL  &kp N4  &kp N5  &kp N6        &kp N0  &kp MINUS  &none  &kp PLUS 
                            &key_repeat  &moto NV 0      &sl A2  &sl SY 
            >;
         };

        abc2 {
            bindings = <
                &kp Z    &kp V    &kp Y      &kp X         &kp B    &kp K      &kp J     &kp Q 
                &kp SQT  &kp DQT  &kp MINUS  &kp G         &kp P    &kp COLON  &kp SEMI  &kp QMARK 
                                  &kp SLASH  &moto NV 0    &kp COMMA  &kp DOT 
            >;
        };

        sym {
            bindings = <
                &kp LT  &kp LBRC  &kp LBKT  &kp LPAR       &kp EXCL   &kp AT    &kp HASH  &kp TILDE 
                &kp GT  &kp RBRC  &kp RBKT  &kp RPAR       &kp STAR   &kp AMPS  &kp PIPE  &kp UNDER 
                               &key_repeat  &moto NV 0     &kp BSLH  &kp GRAVE 
            >;
         };

        fun {
            bindings = <
                &kp C_BRI_UP  &kp F1  &kp F2  &kp F3         &kp F7   &kp F8   &kp F9   &kp C_VOL_UP 
                &kp C_BRI_DN  &kp F4  &kp F5  &kp F6         &kp F10  &kp F11  &kp F12  &kp C_VOL_DN 
                                 &key_repeat  &moto NV 0     &to 0  &kp C_MUTE 
            >;
        };

        nav {
            bindings = <
                &sk LSHFT  &sk LCTRL  &sk LGUI  &sk LALT     &kp HOME   &kp UP    &kp END    &kp PG_UP 
                &kp TAB    &tkp X C   &kp INS   &tkp Z V     &kp LEFT   &kp DOWN  &kp RIGHT  &kp PG_DN 
                                        &kp SPACE  &to 0     &bkspdel  &kp ENTER 
            >;
        };

        osm {
            bindings = <    
                &kt LSHFT  &kt LCTRL  &kt LGUI  &kt LALT      TOSL(NU)   TOSL(SY)   &to FU    &to NV 
                BT(0)      BT(1)      BT(2)     BT(3)         &rls_mods  &kp PSCRN  &kp CAPS  &caps_word 
                                      &kp TAB   &kp ESC       &to 0  &bt BT_CLR 
            >;  
        };

    };
};
