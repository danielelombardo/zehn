#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&caps_word { continue-list = <MINUS UNDERSCORE BKSP DEL LEFT RIGHT DOT COMMA SEMI SLASH>; };
&sk { release-after-ms = <3000>; quick-release; ignore-modifiers; };
&sl { release-after-ms = <1000>; };
&lt { tapping-term-ms = <200>; };

#define W1 0
#define A1 1
#define NU 2
#define A2 3
#define W2 4
#define SY 5
#define FU 6
#define NV 7

#define ASH(l) &tkp LS(l) l
#define BT(d) &bt BT_SEL d
#define COPYUNDO &tkp LG(Z) LG(C)
#define PASTECUT &tkp LG(X) LG(V)

/ {
    macros {
        rls_mods: rls_mods { compatible = "zmk,behavior-macro"; label = "ZM_rls_mods"; #binding-cells = <0>; wait-ms = <5>; tap-ms = <15>;
            bindings = <&macro_release &kp LSHFT &kp LCTRL &kp LALT &kp LGUI>; };
        cw:       cw_on_sl { compatible = "zmk,behavior-macro"; label = "ZM_cw_on_sl";  #binding-cells = <0>; wait-ms = <35>; tap-ms = <35>;
            bindings = <&macro_tap &caps_word &kp LSHFT>; }; 
    };

    behaviors {
        mosl: moml_1shot_l { compatible = "zmk,behavior-hold-tap"; label = "MOML_1SHOT_L"; #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&sl>; }; 
        moto: mom_tog_l    { compatible = "zmk,behavior-hold-tap"; label = "MOM_TOG_L";    #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&tog>; }; 
        mokr: mom_key_rep  { compatible = "zmk,behavior-hold-tap"; label = "MOM_KEY_REP";  #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&key_repeat>; }; 
        tkp:  two_kp       { compatible = "zmk,behavior-hold-tap"; label = "TWO_KP";       #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <210>; bindings = <&kp>, <&kp>; }; 

        bkspdel: back_del  { compatible = "zmk,behavior-mod-morph"; label = "BACK_DEL";   #binding-cells = <0>; bindings = <&kp BKSP>,  <&kp DEL>;   mods = <(MOD_LSFT)>; }; 
    };

    keymap {
        compatible = "zmk,keymap";
        wsrt1 {
            bindings = <
                ASH(W)  ASH(L)  ASH(D)  ASH(C)   ASH(H)  ASH(M)  ASH(O)  ASH(U) 
                ASH(I)  ASH(S)  ASH(R)  ASH(T)   ASH(N)  ASH(E)  ASH(A)  ASH(Y) 
                      &mosl NV W2  &key_repeat     &mosl SY SY  &lt NU SPACE 
            >;
        };

        abc1 {
            bindings = <
                ASH(W)  ASH(C)  ASH(E)  ASH(D)     ASH(Y)  ASH(M)  ASH(H)  ASH(L) 
                ASH(A)  ASH(S)  ASH(R)  ASH(T)     ASH(N)  ASH(I)  ASH(O)  ASH(U) 
                      &mosl NV A2  &key_repeat     &mosl SY SY  &lt NU SPACE 
            >;
        };

        num {
            bindings = <
                ASH(RBRC)  ASH(N4)  ASH(N5)  ASH(N6)     ASH(N0)  ASH(MINUS)  ASH(EQUAL)  ASH(GRAVE) 
                ASH(LBRC)  ASH(N1)  ASH(N2)  ASH(N3)     ASH(N7)  ASH(N8)     ASH(N9)     ASH(BSLH) 
                                      &trans  &trans     &trans  &tog NU 
            >;
         };

        abc2 {
             bindings = <
                &kp SLASH  &kp COMMA  ASH(SQT)  ASH(X)     &kp QMARK  &kp DOT  ASH(SEMI)  ASH(Q) 
                ASH(Z)     ASH(V)     ASH(F)    ASH(G)     ASH(B)     ASH(P)   ASH(K)     ASH(J)
                                 &moto NV NV  &kp CAPS     &cw  &tog NU 
            >;
        };

        wsrt2 {
             bindings = <
                ASH(Z)  ASH(X)  ASH(SEMI)  &kp SLASH     &kp DOT  ASH(SQT)  &kp COMMA  &kp QMARK
                ASH(Q)  ASH(V)  ASH(F)     ASH(G)        ASH(B)   ASH(P)    ASH(K)     ASH(J)
                               &moto NV NV  &kp CAPS     &cw  &tog NU 
            >;
        };

        sym {
            bindings = <
                &none      &kt LCTRL  &kt LGUI  &kt LALT              &kp LT        &kp PG_UP  &kp GT  &tog A1
                &kp PSCRN  &kp C_VOL_DN  &kp C_MUTE  &kp C_VOL_UP     &kp C_BRI_DN  &kp PG_DN  &kp C_BRI_UP  &none 
                                             &rls_mods  &kt LSHFT     &mosl FU FU  &tog SY
            >;
        };

        fun {
            bindings = <
                BT(2)  &kp F4  &kp F5  &kp F6     &kp F10  &kp F11  &kp F12  BT(3) 
                BT(0)  &kp F1  &kp F2  &kp F3     &kp F7   &kp F8   &kp F9   BT(1) 
                       &mokr NV R  &bt BT_CLR     &tog FU  &tog FU 
            >;
        };

        nav {
            bindings = <
                &rls_mods  &sk LCTRL  &sk LGUI  &sk LALT     &kp HOME   &kp UP    &kp END    &kp INS 
                &kp ESC    COPYUNDO  &kp SPACE  &kp TAB      &kp LEFT   &kp DOWN  &kp RIGHT  &kp ENTER 
                                       &tog NV  PASTECUT     &sk LSHFT  &bkspdel 
            >;
        };

    };
};
