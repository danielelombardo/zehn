#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&caps_word { continue-list = <MINUS UNDERSCORE BKSP DEL LEFT RIGHT DOT COMMA SEMI SLASH>; };
&sk { release-after-ms = <3000>; quick-release; ignore-modifiers; };
&sl { release-after-ms = <3000>; };
&lt { tapping-term-ms = <300>; };

#define A1 0
#define NU 1
#define A2 2
#define SY 3
#define FU 4
#define NV 5

#define TOSL(l) &tosl l l
#define BT(d) &bt BT_SEL d

/ {
    macros {
        rls_mods: rls_mods { compatible = "zmk,behavior-macro"; label = "ZM_rls_mods"; #binding-cells = <0>; wait-ms = <5>; tap-ms = <15>;
            bindings = <&macro_release &kp LSHFT &kp LCTRL &kp LALT &kp LGUI>; };
    };
    behaviors {        
        mosl: moml_1shot_l  { compatible = "zmk,behavior-hold-tap"; label = "MOML_1SHOT_L"; #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&sl>; }; 
        mosk: moml_1shot_k  { compatible = "zmk,behavior-hold-tap"; label = "MOML_1SHOT_K"; #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&sk>; }; 
        moto: mom_to_l      { compatible = "zmk,behavior-hold-tap"; label = "MOM_TO_L";     #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&to>; }; 
        tosl: togl_1shot_l  { compatible = "zmk,behavior-hold-tap"; label = "TOGL_1SHOT_L"; #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <250>; bindings = <&tog>, <&sl>; }; 
        tkp:  two_kp        { compatible = "zmk,behavior-hold-tap"; label = "TWO_KP";       #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <250>; bindings = <&kp>, <&kp>; }; 
        torp: togl_repeat   { compatible = "zmk,behavior-hold-tap"; label = "TOGL_REPEAT";  #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <250>; bindings = <&tog>, <&key_repeat>; }; 

        bkspdel: back_del   { compatible = "zmk,behavior-mod-morph"; label = "BACK_DEL";   #binding-cells = <0>; bindings = <&kp BKSP>,  <&kp DEL>;   mods = <(MOD_RSFT)>; }; 
        upins:   up_ins     { compatible = "zmk,behavior-mod-morph"; label = "UP_INS";     #binding-cells = <0>; bindings = <&kp UP>,    <&kp INS>;   mods = <(MOD_RSFT)>; }; 
        homerls: home_rlsm  { compatible = "zmk,behavior-mod-morph"; label = "HOME_RLSM";  #binding-cells = <0>; bindings = <&kp HOME>,  <&rls_mods>; mods = <(MOD_RSFT)>; }; 
        sktshft: sk_kt_shft { compatible = "zmk,behavior-mod-morph"; label = "SK_KT_SHFT"; #binding-cells = <0>; bindings = <&sk LSHFT>, <&kt LSHFT>; mods = <(MOD_RSFT)>; }; 
        sktctrl: sk_kt_ctrl { compatible = "zmk,behavior-mod-morph"; label = "SK_KT_CTRL"; #binding-cells = <0>; bindings = <&sk LCTRL>, <&kt LCTRL>; mods = <(MOD_RSFT)>; }; 
        sktgui:  sk_kt_gui  { compatible = "zmk,behavior-mod-morph"; label = "SK_KT_GUI";  #binding-cells = <0>; bindings = <&sk LGUI>,  <&kt LGUI>;  mods = <(MOD_RSFT)>; }; 
        sktalt:  sk_kt_alt  { compatible = "zmk,behavior-mod-morph"; label = "SK_KT_ALT";  #binding-cells = <0>; bindings = <&sk LALT>,  <&kt LALT>;  mods = <(MOD_RSFT)>; }; 
    };

    keymap {
        compatible = "zmk,keymap";
        abc1 {
            bindings = <
                &kp F  &kp S  &kp E  &kp R       &kp U  &kp I  &kp O  &kp L 
                &kp A  &kp W  &kp D  &kp T       &kp N  &kp M  &kp H  &kp C 
                      &torp NU X  &mosl NV A2    &lt NU SPACE  &sk LSHFT 
            >;
        };

        num {
            bindings = <
                TOSL(FU)  &kp N1  &kp N2  &kp N3      &kp N7  &kp N8    &kp N9     &kp GRAVE
                TOSL(SY)  &kp N4  &kp N5  &kp N6      &kp N0  &kp BSLH  &kp MINUS  &kp EQUAL 
                          &to NV  &mosk NV RSHFT      &to 0  &sl A2 
            >;
         };

        abc2 {
             bindings = <
                &kp Z    &kp V    &kp Y      &kp X     &kp B  &kp K      &kp J     &kp Q 
                &kp SQT  &kp DQT  &kp SLASH  &kp G     &kp P  &kp COLON  &kp SEMI  &kp QMARK 
                            &caps_word  &moto A2 0     &kp COMMA  &kp DOT 
            >;
        };

        sym {
            bindings = <
                BT(2)  BT(0)  &kp C_BRI_DN  &kp C_BRI_UP     &kp LPAR  &kp LBKT  &kp LBRC  &kp LT         
                BT(3)  BT(1)  &kp C_VOL_DN  &kp C_VOL_UP     &kp RPAR  &kp RBKT  &kp RBRC  &kp GT         
                              &kp C_MUTE  &moto NV 0         &to 0  &bt BT_CLR 
            >;
         };

        fun {
            bindings = <
                &none  &kp F1  &kp F2  &kp F3     &kp F7   &kp F8   &kp F9   &kp PSCRN 
                &none  &kp F4  &kp F5  &kp F6     &kp F10  &kp F11  &kp F12  &kp CAPS 
                  &key_repeat  &mosk NV RSHFT     &to 0  &none  
            >;
        };

        nav {
            bindings = <
                &sktshft  &sktctrl  &sktgui  &sktalt     &homerls  &upins    &tkp RSHFT END  &kp PG_UP 
                &kp TAB   &tkp X C  &kp ESC  &tkp Z V    &kp LEFT  &kp DOWN  &kp RIGHT       &kp PG_DN 
                                    &kp SPACE  &to 0     &bkspdel  &kp ENTER 
            >;
        };

    };
};
