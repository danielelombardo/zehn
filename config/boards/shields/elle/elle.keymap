#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define ARCHIVE &kp LC(LS(N1))

&caps_word {
    continue-list = <MINUS UNDERSCORE BKSP DEL LEFT RIGHT DOT COMMA SEMI SLASH>;
};

&sk {
    release-after-ms = <2000>;
    quick-release;
    ignore-modifiers;
};

/ { 
    behaviors {
        mtg: mom_tog_layers {
            compatible = "zmk,behavior-hold-tap";
            label = "MOM_TOG_LAYERS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            bindings = <&mo>, <&tog>;
        };
        mkp: mom_key_press {
            compatible = "zmk,behavior-hold-tap";
            label = "MOM_KEY_PRESS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <200>;
            global-quick-tap;
            bindings = <&mo>, <&kp>;
        }; 

        bkspdel: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BKSP>, <&kp DEL>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI)>;
        };
        lrpar: lpar_rpar {
            compatible = "zmk,behavior-mod-morph";
            label = "LPAR_RPAR";
            #binding-cells = <0>;
            bindings = <&kp LPAR>, <&kp RPAR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        lrbkt: lbkt_rbkt {
            compatible = "zmk,behavior-mod-morph";
            label = "LBKT_RBKT";
            #binding-cells = <0>;
            bindings = <&kp LBKT>, <&kp RBKT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        qemark: qmark_excl {
            compatible = "zmk,behavior-mod-morph";
            label = "QMARK_EXCL";
            #binding-cells = <0>;
            bindings = <&kp QMARK>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        copycut: copy_cut {
            compatible = "zmk,behavior-mod-morph";
            label = "COPY_CUT";
            #binding-cells = <0>;
            bindings = <&kp LC(C)>, <&kp LC(X)>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
        };
        unredo: undo_redo {
            compatible = "zmk,behavior-mod-morph";
            label = "UNDO_REDO";
            #binding-cells = <0>;
            bindings = <&kp LC(Z)>, <&kp LC(Y)>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
        };
        switchapp: switchapp {
            compatible = "zmk,behavior-mod-morph";
            label = "SWITCHAPP";
            #binding-cells = <0>;
            bindings = <&kp LA(TAB)>, <&kp LG(TAB)>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL)>;
        };
        btset: bluetooth_settings {
            compatible = "zmk,behavior-mod-morph";
            label = "BLUETOOTH_SETTINGS";
            #binding-cells = <0>;
            bindings = <&bt BT_NXT>, <&bt BT_CLR>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL)>;
        };

    };
    macros {
        rls_mods: rls_mods {
            compatible = "zmk,behavior-macro";
            label = "ZM_rls_mods";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <15>;
            bindings = <&macro_release &kp LSHFT &kp LCTRL &kp LALT &kp LGUI &to 0>;
        };
    };
 
    keymap {
        compatible = "zmk,keymap";
        // 0  1  2  3  4    5  6  7  8  9  
        // 10 11 12 13 14   15 16 17 18 19 
        // 20 21 22 23 24   25 26 27 28 29
        abc {
            bindings = <
                &kp Q  &kp W  &kp E  &kp R  &kp T           &kp Y         &kp U  &kp I  &kp O  &kp P 
                &kp A  &kp S  &kp D  &kp F  &kp G           &kp H         &kp N  &kp L  &kp M  &bkspdel
                &kp Z  &kp X  &kp C  &kp V  &mtg 1 1        &mkp 2 SPACE  &kp B  &kp J  &kp K  &kp ENTER   
            >;
        };

        nav {
            bindings = <
                &kp ESC     &sk LALT      &sk LSHFT     &sk LCTRL     &sk LGUI       &kp PG_UP     &kp HOME   &kp UP     &kp END    &kp PG_DN
                &tog 4      &kp TAB       &kp CAPS      &caps_word    &kp ENTER      &kp K_APP     &kp LEFT   &kp DOWN   &kp RIGHT  &trans
                &switchapp  &unredo       &copycut      &kp LC(V)     &to 0          &mtg 3 3      &kp INS    &kp SPACE  ARCHIVE    &trans
            >;
        };

        sym {
            bindings = <
                &kp PSCRN   &kp SEMI      &kp COMMA     &kp DOT       &kp C_BRI_UP   &bt BT_SEL 0  &sk RCTRL  &sk RSHFT  &sk RALT   &sk RGUI  
                &lrpar      &lrbkt        &kp AT        &qemark       &kp C_BRI_DN   &btset        &kp MINUS  &kp SQT    &kp EQUAL  &kp SLASH
                &kp BSLH    &kp C_MUTE    &kp C_VOL_DN  &kp C_VOL_UP  &mtg 3 3       &none         &kp STAR   &kp AMPS   &kp NUHS   &kp GRAVE
            >;
        };

        num {
            bindings = <
                &kp N4      &kp N3        &kp N2        &kp N1        &sk LALT       &kp F1        &kp F2     &kp F3     &kp F4     &kp F5 
                &kp N8      &kp N7        &kp N6        &kp N5        &sk LGUI       &kp F6        &kp F7     &kp F8     &kp F9     &bkspdel   
                &kp N0      &kp N9        &sk LSHFT     &sk LCTRL     &to 0          &to 0         &kp F10    &kp F11    &kp F12    &kp ENTER 
            >;
        };

        nav_per {
            bindings = <
                &kp ESC     &kt LALT      &kt LSHFT     &kt LCTRL     &kt LGUI       &kp PG_UP     &kp HOME   &kp UP     &kp END    &kp PG_DN
                &kp TAB     &rls_mods     &kp CAPS      &caps_word    &kp ENTER      &kp K_APP     &kp LEFT   &kp DOWN   &kp RIGHT  &trans
                &switchapp  &unredo       &copycut      &kp LC(V)     &rls_mods      &rls_mods     &kp INS    &kp SPACE  ARCHIVE    &trans
            >;
        };
    
    };
};