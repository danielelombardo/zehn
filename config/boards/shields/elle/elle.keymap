#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define ARCHIVE &kp LC(LS(N1))
#define LAY(l) &mtg  l l

&caps_word { continue-list = <MINUS UNDERSCORE BKSP DEL LEFT RIGHT DOT COMMA SEMI SLASH>; };
&sk { release-after-ms = <2000>; quick-release; ignore-modifiers; };
&lt { tapping-term-ms = <200>; };


/ { 
    behaviors {
        mtg: mom_tog_layers { compatible = "zmk,behavior-hold-tap"; label = "MOM_TOG_LAYERS"; #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&tog>; };
        bkspdel: back_del   { compatible = "zmk,behavior-mod-morph"; label = "BACK_DEL";   #binding-cells = <0>; bindings = <&kp BKSP>, <&kp DEL>;      mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI)>; };
        lrpar:   lpar_rpar  { compatible = "zmk,behavior-mod-morph"; label = "LPAR_RPAR";  #binding-cells = <0>; bindings = <&kp LPAR>, <&kp RPAR>;     mods = <(MOD_LSFT|MOD_RSFT)>; };
        lrbkt:   lbkt_rbkt  { compatible = "zmk,behavior-mod-morph"; label = "LBKT_RBKT";  #binding-cells = <0>; bindings = <&kp LBKT>, <&kp RBKT>;     mods = <(MOD_LSFT|MOD_RSFT)>; };
        lrbrc:   lbrc_rbrc  { compatible = "zmk,behavior-mod-morph"; label = "LBRC_RBRC";  #binding-cells = <0>; bindings = <&kp LBRC>, <&kp RBRC>;     mods = <(MOD_LSFT|MOD_RSFT)>; };
        qemark:  qmark_excl { compatible = "zmk,behavior-mod-morph"; label = "QMARK_EXCL"; #binding-cells = <0>; bindings = <&kp QMARK>, <&kp EXCL>;    mods = <(MOD_LSFT|MOD_RSFT)>; };
        btset:   bluetooths { compatible = "zmk,behavior-mod-morph"; label = "BLUETOOTHS"; #binding-cells = <0>; bindings = <&bt BT_NXT>, <&bt BT_CLR>; mods = <(MOD_LSFT|MOD_RSFT|MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL)>; };
    };
    macros {
        rls_mods: rls_mods { compatible = "zmk,behavior-macro"; label = "ZM_rls_mods"; #binding-cells = <0>; wait-ms = <5>; tap-ms = <15>;
            bindings = <&macro_release &kp LSHFT &kp LCTRL &kp LALT &kp LGUI> , <&macro_tap &to 0>; };
    };
 
    keymap {
        compatible = "zmk,keymap";
        abc {
            bindings = <
                &kp Q  &kp W  &kp E  &kp R  &kp F           &kp K        &kp U  &kp I  &kp O      &kp P 
                &kp A  &kp S  &kp D  &kp T  &kp G           &kp Y        &kp H  &kp N  &kp M      &kp L
                &kp Z  &kp X  &kp C  &kp V  LAY(2)          &lt 3 SPACE  &kp B  &kp J  &kp ENTER  &bkspdel   
            >;
        };

        num {
            bindings = <
                &kp N0     &kp N3      &kp N2        &kp N1        &none          &none         &kp F1     &kp F2     &kp F3     &kp F10 
                &none      &kp N6      &kp N5        &kp N4        &none          &none         &kp F4     &kp F5     &kp F6     &kp F11 
                &to 0      &kp N9      &kp N8        &kp N7        &trans         &trans        &kp F7     &kp F8     &kp F9     &kp F12  
            >;
        };

        nav {
            bindings = <
                &to 1      &kp ESC     &kp CAPS      &caps_word    &none          &kp PG_UP     &kp HOME   &kp UP     &kp END    &none
                &kp TAB    &sk LALT    &sk LSHFT     &sk LCTRL     &sk LGUI       &kp PG_DN     &kp LEFT   &kp DOWN   &kp RIGHT  ARCHIVE
                &to 4      &kp ENTER   &bkspdel      &kp PSCRN     &to 0          &kp SPACE     &kp INS    &kp K_APP  &trans     &trans
            >;
        };

        sym {
            bindings = <
                &btset     &lrbrc      &kp AT        &qemark       &kp C_BRI_UP   &bt BT_SEL 1  &kp MINUS  &kp SQT    &kp EQUAL  &none
                &lrpar     &kp SEMI    &kp COMMA     &kp DOT       &kp C_BRI_DN   &sk RGUI      &sk RCTRL  &sk RSHFT  &sk RALT   &kp SLASH
                &lrbkt     &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &to 0          &none         &kp STAR   &kp BSLH   &kp AMPS   &kp GRAVE
            >;
        };

        nav_per {
            bindings = <
                &none      &kp ESC     &kp CAPS      &caps_word    &none          &kp PG_UP     &kp HOME   &kp UP     &kp END    &none 
                &kp TAB    &kt LALT    &kt LSHFT     &kt LCTRL     &kt LGUI       &kp PG_DN     &kp LEFT   &kp DOWN   &kp RIGHT  ARCHIVE
                &bkspdel   &kp ENTER   &bkspdel      &kp PSCRN     &rls_mods      &rls_mods     &kp INS    &kp K_APP  &trans     &trans
            >;
        };

    };
};